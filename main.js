!function(){"use strict";var e=class{constructor(e,t){this._inputSelector=e.inputSelector,this._submitButtonSelector=e.submitButtonSelector,this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass,this._form=t}_showInputError(e){const t=this._form.querySelector(`#${e.id}-error`);e.classList.add(this._inputErrorClass),t.textContent=e.validationMessage,t.classList.add(this._errorClass)}_hideInputError(e){const t=this._form.querySelector(`#${e.id}-error`);e.classList.remove(this._inputErrorClass),t.textContent=" ",t.classList.remove(this._errorClass)}_toggleButtonState(){this._hasInvalidInput()?this.disableButton():this._enableButton()}_hasInvalidInput(){return!this._inputList.every((e=>e.validity.valid))}_checkInputValidity(e){e.validity.valid?this._hideInputError(e):this._showInputError(e)}disableButton(){this._submitButton.classList.add(this._inactiveButtonClass),this._submitButton.disabled=!0}_enableButton(){this._submitButton.classList.remove(this._inactiveButtonClass),this._submitButton.disabled=!1}_setEventListeners(){this._inputList=[...this._form.querySelectorAll(this._inputSelector)],this._submitButton=this._form.querySelector(this._submitButtonSelector),this._inputList.forEach((e=>{e.addEventListener("input",(t=>{this._checkInputValidity(e),this._toggleButtonState()}))}))}enableValidation(){this._form.addEventListener("submit",(e=>{e.preventDefault()})),this._setEventListeners()}};class t{constructor(e){let{popupSelector:t}=e;this._popupElement=document.querySelector(t)}open(){this._popupElement.classList.add("modal_opened"),document.addEventListener("keydown",this._handleEscClose)}close(){this._popupElement.classList.remove("modal_opened"),document.removeEventListener("keydown",this._handleEscClose)}_handleEscClose=e=>{"Escape"===e.key&&this.close()};setEventListeners(){this._popupElement.querySelector(".modal__button-reset").addEventListener("click",(()=>this.close())),this._popupElement.addEventListener("click",(e=>{e.target.matches(".modal")&&this.close()}))}}class s extends t{constructor(e,t){let{handleSubmit:s,buttonText:o,loadingButtonText:i}=t;super({popupSelector:e}),this._popupForm=this._popupElement.querySelector(".modal__form"),this._handleSubmit=s,this._inputs=this._popupForm.querySelectorAll(".modal__input"),this._buttonText=o,this._loadingButtonText=i,this._popupSubmitButton=this._popupElement.querySelector(".modal__button")}_getInputValues(){const e={};return this._inputs.forEach((t=>{e[t.name]=t.value})),e}setEventListeners(){this._popupForm.addEventListener("submit",(e=>{e.preventDefault(),this._handleSubmit(this._getInputValues())})),super.setEventListeners()}close(){this._popupForm.reset(),super.close()}hideLoading(){this._popupSubmitButton.textContent=this._buttonText}showLoading(){this._popupSubmitButton.textContent=this._loadingButtonText}}const o=document.querySelector(".profile__edit-button"),i=document.querySelector("#profile-popup"),n=i.querySelector(".modal__form"),r=(i.querySelector(".modal__button-reset"),document.querySelector("#name")),a=document.querySelector("#description"),l=(document.querySelector(".profile__title"),document.querySelector(".profile__description"),document.querySelector(".profile__add-button")),d=document.querySelector("#add-card-popup"),u=(d.querySelector(".modal__button-reset"),d.querySelector(".modal__form")),c=(document.querySelector("#title"),document.querySelector("#image"),document.querySelector("#picture-popup"),document.querySelector(".cards__list"),{inputSelector:".modal__input",submitButtonSelector:".modal__button",inactiveButtonClass:"modal__button_disabled",inputErrorClass:"modal__input_type_error",errorClass:"popup__error_visible"}),h=(document.querySelector(".profile__image"),document.querySelector(".card__trash-button"),document.querySelector(".profile__image-button")),_=(document.querySelector(".profile__title"),document.querySelector(".profile__description"),document.querySelector("#change-pic-form")),p=document.querySelector("#delete-card-form");class m{constructor(e,t){let{items:s,renderer:o}=e;this._items=s,this._renderer=o,this._container=document.querySelector(t)}renderItems(){this._items.forEach((e=>{const t=this._renderer(e);this.addItem(t)}))}addItem(e){this._container.prepend(e)}}let S;const b=new e(c,n),v=new e(c,u),L=new e(c,_),y=new e(c,p);b.enableValidation(),v.enableValidation(),L.enableValidation(),y.enableValidation();const E=new class extends t{open(e){let{link:t,name:s}=e;const o=this._popupElement.querySelector(".modal__image-clicked"),i=this._popupElement.querySelector(".modal__image-text");o.src=t,i.alt=s,i.textContent=s,super.open()}}({popupSelector:"#picture-popup"});E.setEventListeners();const g=new class extends t{constructor(e,t){let{buttonText:s,loadingButtonText:o}=t;super({popupSelector:e}),this._popupForm=this._popupElement.querySelector(".modal__form"),this._popupConfirmationButton=this._popupForm.querySelector(".modal__button"),this._buttonText=s,this._loadingButtonText=o}setEventListeners(){this._popupForm.addEventListener("submit",(e=>{e.preventDefault(),this._handleConfirmation()})),super.setEventListeners()}setSubmitAction(e){this._handleConfirmation=e}showLoading(){this._popupConfirmationButton.textContent=this._loadingButtonText}hideLoading(){this._popupConfirmationButton.textContent=this._buttonText}close(){this._popupForm.reset(),super.close()}}("#delete-card",{buttonText:"Yes",loadingButtonText:"Deleting..."});g.setEventListeners();const f=new class{constructor(e){let{baseUrl:t,authorizationID:s}=e;this._baseUrl=t,this._header={authorization:s,"Content-Type":"application/json"}}_processResponseServer=e=>e.ok?e.json():Promise.reject(`Error: ${e.status}`);getUserInformation(){return fetch(`${this._baseUrl}users/me`,{headers:this._header}).then(this._processResponseServer)}getInitialCards(){return fetch(`${this._baseUrl}cards`,{headers:this._header}).then(this._processResponseServer)}editProfile(e){let{name:t,about:s}=e;return fetch(`${this._baseUrl}users/me`,{method:"PATCH",headers:this._header,body:JSON.stringify({name:t,about:s})}).then(this._processResponseServer)}addNewCard(e){let{name:t,link:s}=e;return fetch(`${this._baseUrl}cards`,{method:"POST",headers:this._header,body:JSON.stringify({name:t,link:s})}).then(this._processResponseServer)}deleteCard(e){return fetch(`${this._baseUrl}cards/${e}`,{method:"DELETE",headers:this._header}).then(this._processResponseServer)}updateProfPic(e){return fetch(`${this._baseUrl}users/me/avatar`,{method:"PATCH",headers:this._header,body:JSON.stringify({avatar:e})}).then(this._processResponseServer)}addLike(e){return fetch(`${this._baseUrl}cards/likes/${e}`,{method:"PUT",headers:this._header}).then(this._processResponseServer)}removeLike(e){return fetch(`${this._baseUrl}cards/likes/${e}`,{method:"DELETE",headers:this._header}).then(this._processResponseServer)}}({baseUrl:"https://around.nomoreparties.co/v1/group-12/",authorizationID:"3d5d45c7-6b7d-40fa-b3ac-6d464d71f592"});let k;Promise.all([f.getUserInformation(),f.getInitialCards()]).then((e=>{let[t,s]=e;T.setUserInfo(t.name,t.about),T.setAvatar(t.avatar),k=t._id,S=new m({items:s,renderer:e=>B(e,e.owner._id===k)},".cards__list"),S.renderItems()})).catch((e=>console.log(e)));const C=e=>{g.setSubmitAction((()=>{g.showLoading(),f.deleteCard(e.id).then((()=>{g.close(),e.removeCard()})).catch((e=>console.log(e))).finally((()=>{g.hideLoading()}))})),g.open()},q=e=>{e.isLiked()?f.removeLike(e.id).then((t=>{e.updateLikes(t.likes)})).catch((e=>console.log(e))):f.addLike(e.id).then((t=>{e.updateLikes(t.likes)})).catch((e=>console.log(e)))},B=e=>new class{constructor(e,t,s,o,i,n,r){this._text=e.name,this._link=e.link,this.id=e._id,this._userId=t,this._isOwner=s,this._likes=e.likes,this._cardSelector=o,this._handleCardClick=i,this._handleDeleteCard=n,this._handleLikeButton=r}_setEventListeners(){this._element.querySelector(".card__like-button").addEventListener("click",(()=>this._handleLikeButton(this))),this._trashButton=this._element.querySelector(".card__trash-button"),this._trashButton.addEventListener("click",(()=>this._handleDeleteCard(this))),this._element.querySelector(".card__image").addEventListener("click",(()=>this._handleCardClick({name:this._text,link:this._link})))}like(){this._element.querySelector(".card__like-button").classList.add("card__like-button_active")}unlike(){this._element.querySelector(".card__like-button").classList.remove("card__like-button_active")}isLiked(){return this._likes.find((e=>{let{_id:t}=e;return this._userId===t}))}updateLikes(e){this._likes=e,this.renderLikes()}renderLikes(){this._element.querySelector(".card__like-number").textContent=this._likes.length,this.isLiked(this._userId)?this.like():this.unlike()}_getTemplate(){return document.querySelector(this._cardSelector).content.querySelector(".card").cloneNode(!0)}getView(){this._element=this._getTemplate(),this._setEventListeners();const e=this._element.querySelector(".card__image"),t=this._element.querySelector(".card__text");return this.renderLikes(),e.src=this._link,e.alt=this._text,t.textContent=this._text,this._isOwner&&this._trashButton.classList.add("card__trash_visible"),this._element}removeCard(){this._element.remove(),this._element.null}}(e,k,e.owner._id===k,".template",(e=>{E.open(e)}),C,q).getView(),x=new s("#profile-popup",{handleSubmit:e=>{x.showLoading(),f.editProfile({name:e.name,about:e.description}).then((e=>{T.setUserInfo(e.name,e.about),x.close()})).catch((e=>console.log(e))).finally((()=>{x.hideLoading()}))},buttonText:"Save",loadingButtonText:"Saving.."}),w=new s("#add-card-popup",{handleSubmit:e=>{w.showLoading(),f.addNewCard({name:e.title,link:e.image}).then((e=>{const t=B(e);S.addItem(t),w.close()})).catch((e=>console.log(e))).finally((()=>{w.hideLoading()}))},buttonText:"Create",loadingButtonText:"Creating..."}),I=new s("#change-profile-pic",{handleSubmit:e=>{I.showLoading(),f.updateProfPic(e.image).then((e=>{T.setAvatar(e.avatar),I.close()})).catch((e=>console.log(e))).finally((()=>{I.hideLoading()}))},buttonText:"Save",loadingButtonText:"Saving.."});h.addEventListener("click",(()=>{L.disableButton(),I.open()}));const T=new class{constructor(e){let{nameSelector:t,jobSelector:s,avatarSelector:o}=e;this._nameElement=document.querySelector(t),this._jobElement=document.querySelector(s),this._avatarElement=document.querySelector(o)}getUserInfo(){return{name:this._nameElement.textContent,description:this._jobElement.textContent}}setUserInfo(e,t){this._nameElement.textContent=e,this._jobElement.textContent=t}setAvatar(e){this._avatarElement.src=e}}({nameSelector:".profile__title",jobSelector:".profile__description",avatarSelector:".profile__image"});w.setEventListeners(),x.setEventListeners(),I.setEventListeners(),l.addEventListener("click",(()=>{w.open(),v.disableButton()})),o.addEventListener("click",(()=>{b.disableButton(),x.open();const e=T.getUserInfo();r.value=e.name,a.value=e.description}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,